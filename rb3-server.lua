function plog()print(" ");print(" ");print("^5██████╗ ██████╗ ██████╗    ^3  █████╗  ██████╗");print("^5██╔══██╗██╔══██╗╚════██╗   ^3 ██╔══██╗██╔════╝");print("^5██████╔╝██████╔╝ █████╔╝   ^3 ███████║██║     ");print("^5██╔══██╗██╔══██╗ ╚═══██╗   ^3 ██╔══██║██║     ");print("^5██║  ██║██████╔╝██████╔╝   ^3 ██║  ██║╚██████╗");print("^5╚═╝  ╚═╝╚═════╝ ╚═════╝    ^3 ╚═╝  ╚═╝ ╚═════╝");print(" ");print("^3------^2 Licencia activada correctamente ^3------^0");print(" ");print(" ");end

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==2) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end if (v0==3) then v10=setmetatable;v11=pcall;v12=select;v0=4;end if (v0==5) then function v15(v16,v17)local v18=1;local v19;v16=v5(v4(v16,5),"..",function(v30)if (v2(v30,2)==79) then v19=v1(v4(v30,1,1));return "";else local v62=v3(v1(v30,16));if v19 then local v71=0;local v72;while true do if (0==v71) then v72=v6(v62,v19);v19=nil;v71=1;end if (v71==1) then return v72;end end else return v62;end end end);local function v20(v31,v32,v33)if v33 then local v63=0 -0;local v64;while true do if (v63==(0 + 0)) then v64=(v31/((2 + 0)^(v32-(990 -(4 + 985)))))%((471 -(424 + 45))^(((v33-(1 -0)) -(v32-(1 -0))) + (1 -0)));return v64-(v64%(253 -(190 + 62)));end end else local v65=(1 + 1)^(v32-(2 -1));return (((v31%(v65 + v65))>=v65) and ((2 -0) -1)) or (0 + 0);end end local function v21()local v38=0 + (0 -0);local v39;while true do if (v38==((1 + 0) -0)) then return v39;end if (v38==(0 + 0)) then v39=v2(v16,v18,v18);v18=v18 + (1 -(0 + 0));v38=537 -(174 + 362);end end end local function v22()local v40,v41=v2(v16,v18,v18 + 2);v18=v18 + (7 -5);return (v41 * (430 -174)) + v40;end local function v23()local v42,v43,v44,v45=v2(v16,v18,v18 + (5 -2));v18=v18 + 1 + 3;return (v45 * (16778461 -(715 + 530))) + (v44 * (66563 -(88 + 939))) + (v43 * ((1889 -(1486 + 190)) + 43)) + v42;end local function v24()local v46=v23();local v47=v23();return (( -(1 + 1 + (155 -(56 + 99))) * v20(v47,(422 + 531) -(817 + 104))) + (963 -(280 + 682))) * ((9 -(20 -13))^(v20(v47,338 -(48 + 269),23 + 8) -(133 + 890))) * ((((v20(v47,1 -0,15 + 5) * ((8 -6)^32)) + v46)/(((2380 -1769) -(358 + 251))^(23 + 29))) + 1);end local function v25(v34)local v48=0;local v49;local v50;while true do if (v48==(70 -(5 + 65))) then v49=nil;if  not v34 then v34=v23();if (v34==0) then return "";end end v48=1 + 0;end if (v48==3) then return v7(v50);end if (v48==(9 -7)) then v50={};for v73=(4 -2) -1, #v49 do v50[v73]=v3(v2(v4(v49,v73,v73)));end v48=(999 -(525 + 471)) + 0;end if ((3 -(3 -1))==v48) then v49=v4(v16,v18,(v18 + v34) -(1 -0));v18=v18 + v34;v48=5 -3;end end end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v51=64 -(38 + 26);local v52;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v51==(5 -2)) then v58=nil;while true do if (v52==2) then for v95=1,v57 do local v96=0;local v97;local v98;local v99;local v100;while true do if (v96==(1715 -(1532 + 181))) then while true do if (v97==(0 -0)) then local v110=1660 -(377 + 1283);while true do if (v110~=0) then else v98=1047 -(553 + 494);v99=nil;v110=1;end if (v110==1) then v97=1;break;end end end if (v97==1) then v100=nil;while true do if (v98~=(0 -0)) then else local v116=1149 -(793 + 356);local v117;while true do if (v116==(0 -0)) then v117=0 + 0;while true do if (v117==(1051 -(274 + 777))) then local v206=0;while true do if (v206==(0 + 0)) then v99=v21();v100=nil;v206=2 -1;end if (v206==1) then v117=1;break;end end end if (v117==(1 + 0)) then v98=1736 -(1201 + 534);break;end end break;end end end if (v98==1) then if (v99==1) then v100=v21()~=(1972 -(1378 + 594));elseif (v99==2) then v100=v24();elseif (v99==(2000 -(1332 + 665))) then v100=v25();end v58[v95]=v100;break;end end break;end end break;end if (v96==(0 + 0)) then v97=0 -0;v98=nil;v96=1;end if (v96~=1) then else v99=nil;v100=nil;v96=934 -(910 + 22);end end end v56[7 -4]=v21();for v101=1,v23() do local v102=0 + 0;local v103;local v104;local v105;while true do if (v102~=1) then else v105=nil;while true do if (v103==(0 + 0)) then local v111=0;while true do if (v111==(1 + 0)) then v103=2 -1;break;end if (v111==0) then v104=0;v105=nil;v111=1;end end end if (v103~=(1 -0)) then else while true do if (v104==(442 -(67 + 375))) then v105=v21();if (v20(v105,1 -0,463 -(88 + 374))==(0 -0)) then local v119=0 -0;local v120;local v121;local v122;local v123;while true do if (v119==1) then v122=nil;v123=nil;v119=2 + 0;end if (v119~=(0 + 0)) then else v120=0;v121=nil;v119=1;end if (v119~=2) then else while true do if (v120~=(601 -(466 + 134))) then else local v214=0 -0;while true do if (v214~=(0 -0)) then else v123={v22(),v22(),nil,nil};if (v121==0) then local v262=0;local v263;local v264;while true do if (v262~=(1515 -(1033 + 481))) then else while true do if (v263~=(0 -0)) then else v264=0 -0;while true do if (v264~=(0 -0)) then else v123[3]=v22();v123[4]=v22();break;end end break;end end break;end if (v262~=(1541 -(1269 + 272))) then else v263=0;v264=nil;v262=1683 -(948 + 734);end end elseif (v121==(1 + 0)) then v123[5 -2]=v23();elseif (v121==(493 -(412 + 79))) then v123[3]=v23() -((1104 -(64 + 1038))^16);elseif (v121~=3) then else local v285=0;while true do if (v285==0) then v123[3 + 0]=v23() -((173 -(34 + 137))^(1 + 15));v123[4]=v22();break;end end end v214=1 + 0;end if (v214~=(1 + 0)) then else v120=1 + 1;break;end end end if (v120==(2 -0)) then if (v20(v122,1 + 0,1)==(4 -3)) then v123[2]=v58[v123[2]];end if (v20(v122,2,2 + 0)~=(1 + 0)) then else v123[1168 -(640 + 525)]=v58[v123[3]];end v120=3;end if (v120==0) then local v215=0 + 0;while true do if (v215~=1) then else v120=2 -1;break;end if (v215==(0 + 0)) then v121=v20(v105,2,14 -11);v122=v20(v105,4,6);v215=1155 -(311 + 843);end end end if ((2 + 1)==v120) then if (v20(v122,3,6 -3)~=1) then else v123[4]=v58[v123[4]];end v53[v101]=v123;break;end end break;end end end break;end end break;end end break;end if (v102==0) then v103=0;v104=nil;v102=2 -1;end end end v52=3;end if (v52==(13 -10)) then local v91=0;while true do if (v91~=(1 + 0)) then else return v56;end if (v91~=(0 + 0)) then else local v109=0 -0;while true do if (v109==0) then for v112=1,v23() do v54[v112-(1 + 0)]=v28();end for v114=1,v23() do v55[v114]=v23();end v109=1;end if (v109==1) then v91=1 -0;break;end end end end end if (v52==1) then local v92=0;local v93;while true do if (0==v92) then v93=0;while true do if (v93==0) then v56={v53,v54,nil,v55};v57=v23();v93=1669 -(346 + 1322);end if (v93==(751 -(469 + 281))) then v58={};v52=2 + 0;break;end end break;end end end if (v52==(1805 -(501 + 1304))) then local v94=0;while true do if (v94==1) then v55={};v52=1;break;end if (v94==0) then v53={};v54={};v94=2 -1;end end end end break;end if (v51==(731 -(724 + 5))) then v56=nil;v57=nil;v51=5 -2;end if (v51~=0) then else v52=0;v53=nil;v51=204 -(56 + 147);end if (v51==(1 + 0)) then v54=nil;v55=nil;v51=1115 -(999 + 114);end end end local function v29(v35,v36,v37)local v59=v35[1];local v60=v35[2];local v61=v35[3];return function(...)local v66=1;local v67= -1;local v68={...};local v69=v12("#",...) -1;local function v70()local v75=v59;local v76=Const;local v77=v60;local v78=v61;local v79=v27;local v80={};local v81={};local v82={};for v88=1738 -(1400 + 338),v69 do if (((3434 + (596 -(231 + 72)))>(3943 -1770)) and (v88>=v78)) then v80[v88-v78]=v68[v88 + 1 + 0];else v82[v88]=v68[v88 + (1 -0)];end end local v83=(v69-v78) + 1 + 0;local v84;local v85;while true do local v89=0 + 0 + 0;while true do if ((0==v89) or ((3840 -(59 + 1128))<=2418)) then local v108=1754 -(1505 + 249);while true do if (((2111 + 1491)>(1200 + 595)) and ((1061 -(631 + 430))==v108)) then v84=v75[v66];v85=v84[1 -0];v108=1 + (242 -(173 + 69));end if ((v108==1) or ((15253 -10462)>=(459 + 4456))) then v89=1376 -((1801 -(556 + 31)) + 119 + 42);break;end end end if ((359<(517 + 70)) and (v89==(3 -2))) then if ((v85<=(11 + 9)) or ((3628 -(1095 + 721))>=(6019 -2738))) then if ((v85<=((15 -10) + 3 + 1)) or ((2889 -(135 + 740))<=627)) then if ((v85<=(8 -4)) or ((5577 -2290)<2384)) then if ((v85<=(2 -1)) or (((18332 -11268) -4662)<(7822 -(2741 + 2993)))) then if ((1169<(1241 + 1165)) and (v85==(0 -0))) then if (((11034 -6980)>=(2630 -(293 + 976))) and (v82[v84[1274 -(314 + (2387 -1429))]]~=v82[v84[1867 -(368 + 1495)]])) then v66=v66 + 1 + 0;else v66=v84[4 -1];end else v37[v84[8 -5]]=v82[v84[2]];end elseif ((v85<=(2 -0)) or ((2886 -(1556 + 294))>(2827 -1203))) then do return v82[v84[422 -(58 + 362)]]();end elseif ((v85>(2 + 1)) or (2629==(4174 -1042))) then do return v82[v84[2]];end else v82[v84[1 + 1]][v84[1 + 2]]=v82[v84[3 + 1]];end elseif ((v85<=6) or ((11898 -7796)<(3494 -2509))) then if (((664 -483)<=(3041 -(414 + 378))) and (v85==((507 -(290 + 214)) + 2))) then local v125=331 -(145 + 18 + 168);local v126;local v127;local v128;while true do if (((6128 -2616)>=((489 + 459) -740)) and (v125==(0 + (0 -0)))) then local v202=0 -0;while true do if ((v202==0) or ((569 + 2706)<(1927 -(329 + 29)))) then v126=1906 -(1620 + 286);v127=nil;v202=1;end if ((v202==(1 + 0)) or ((982 -(434 + 18))>(3319 -(1184 + 706)))) then v125=1;break;end end end if (((1871 -(1364 + 506))==v125) or ((14144 -9201)<=3870)) then v128=nil;while true do if ((723<=(2834 + 621)) and (v126==(0 -0))) then local v217=529 -(404 + 125);while true do if ((v217==(0 + 0)) or ((4470 -(106 + 201))>=4572)) then v127=v84[(532 + 78) -(402 + 206)];v128=v82[v84[39 -(23 + (1587 -(544 + 1030)))]];v217=1;end if ((1407<(3454 + 654)) and (v217==(1 + 0))) then v126=2 -1;break;end end end if (((850 -(369 + 148))<=(4971 -1428)) and (v126==(1 + 0))) then v82[v127 + (3 -2)]=v128;v82[v127]=v128[v84[14 -(6 + 4)]];break;end end break;end end elseif (((2385 + 1022)==(4321 -(266 + 648))) and (v84[2]==v82[v84[(106 + 821) -(201 + 722)]])) then v66=v66 + (817 -(231 + 585));else v66=v84[3 + 0];end elseif (((2703 -1323)<=(6348 -2309)) and (v85<=(4 + 3))) then v82[v84[1352 -(60 + 1290)]]=v84[5 -2];elseif (((2786 -(398 + 755))<(3546 + 980)) and (v85==(8 + 0))) then local v172=0 -0;local v173;while true do if (((5134 -(299 + 86))>(705 + (1441 -(87 + 66)))) and ((946 -(745 + 201))==v172)) then v173=v84[5 -3];v82[v173]=v82[v173](v13(v82,v173 + (1 -(0 -0)),v84[3 + 0]));break;end end else v82[v84[2 -0]]();end elseif ((3599<(33 + 4045)) and (v85<=14)) then if ((v85<=(1092 -(516 + 565))) or ((11 + 21)>1687)) then if (((73 + 349)<=(5858 -(384 + 1109))) and (v85>(345 -((631 -470) + 174)))) then local v130=0;local v131;local v132;local v133;local v134;while true do if ((v130==0) or ((11721 -6768)<(159 + 5))) then v131=0 + 0;v132=nil;v130=338 -(30 + 307);end if (((3985 -(130 + 134))==(4318 -((342 -83) + 338))) and (v130==(562 -(464 + 96)))) then while true do if ((v131==(1 + 0)) or ((689 + 382)==(727 + 1537))) then v134=0;for v232=v132,v84[202 -((60 -22) + 160)] do local v233=0;while true do if ((v233==(1968 -(980 + 988))) or ((1386 + 941)>=2383)) then v134=v134 + (1227 -(57 + 331 + 838));v82[v232]=v133[v134];break;end end end break;end if ((v131==(1883 -(481 + 1402))) or (3607>=(1184 + 3554))) then v132=v84[2 + 0];v133={v82[v132](v13(v82,v132 + (3 -2),v67))};v131=646 -(558 + (978 -(721 + 170)));end end break;end if (((8170 -4415)>(2809 -1821)) and (v130==(1 + 0))) then v133=nil;v134=nil;v130=4 -2;end end else local v135=464 -(329 + 135);local v136;local v137;local v138;local v139;while true do if (((0 + 0)==v135) or (((4512 -2771) + 1127)>=(5223 -(244 + 54)))) then v136=v84[1 + 1];v137,v138=v79(v82[v136](v82[v136 + 1]));v135=1 + 0;end if ((899==(600 + 299)) and (v135==2)) then for v207=v136,v67 do local v208=0;local v209;while true do if (((0 + 0)==v208) or ((1799 + 528)==4946)) then v209=0;while true do if ((v209==(0 -0)) or ((2582 -956)<(665 + 731))) then v139=v139 + ((3 -0) -2);v82[v207]=v137[v139];break;end end break;end end end break;end if (((4110 -(8 + 21 + (1694 -866)))>=(6419 -3943)) and (v135==1)) then local v203=0 + 0;while true do if ((v203==(1290 -(86 + 636 + 568))) or ((3911 -(8 + 37))<(1866 + 1267))) then v67=(v138 + v136) -(4 -(1768 -(1730 + 35)));v139=0;v203=1085 -(931 + 153);end if (((12186 -8341)==(15313 -11468)) and (v203==(1 + 0 + 0))) then v135=2;break;end end end end end elseif ((v85<=12) or (1201<358)) then local v140=274 -(111 + 163);local v141;local v142;local v143;local v144;while true do if ((v140==(1063 -(419 + 642))) or ((1480 + 760 + 3)==(9059 -6479))) then while true do if ((v141==(0 + 0)) or (418>(1179 -(5 + 15)))) then local v220=0;while true do if (((3097 -(501 + 88))<(4564 -(1012 + 560))) and (v220==(2 -1))) then v141=710 -(106 + (2393 -(493 + 1297)));break;end if (((2832 + 157)>(659 + 32)) and (v220==0)) then v142=v84[2 + 0];v143={v82[v142](v82[v142 + (758 -(705 + 52))])};v220=340 -((1015 -680) + 4);end end end if (((6202 -(445 + 1336))>949) and (v141==((631 + 437) -(1055 + 12)))) then v144=0 -0;for v234=v142,v84[1330 -(584 + 742)] do local v235=0;while true do if ((v235==((0 + 0) -0)) or ((7509 -3281)==(148 + 361))) then v144=v144 + (790 -(453 + 336));v82[v234]=v143[v144];break;end end end break;end end break;end if (((5812 -3391)<=4438) and (v140==(0 -0))) then v141=0 -0;v142=nil;v140=1;end if (((10872 -7925)>(193 + 1872)) and ((1081 -(823 + 257))==v140)) then v143=nil;v144=nil;v140=636 -(154 + 480);end end elseif ((3001==(3908 -(77 + 830))) and (v85>(1 + 12))) then v82[v84[1094 -(1025 + 67)]]=v82[v84[3 + 0 + 0]][v84[10 -6]];else do return;end end elseif ((1750==(1185 + 418 + 147)) and (v85<=(10 + 7))) then if (((3902 -2467)<=(10288 -5573)) and (v85<=(890 -(623 + 252)))) then if (v82[v84[2 + 0]] or ((2793 + 1659)<((479 -174) -178))) then v66=v66 + (1 -0);else v66=v84[8 -5];end elseif (((1481 -(155 + (7 -4)))<(4834 -(565 + 675))) and (v85==16)) then v82[v84[2 + 0]]=v82[v84[2 + 1]] + v84[4];elseif ((3836<(6336 -(645 + 1048))) and (v82[v84[800 -(780 + 18)]]~=v84[15 -11])) then v66=v66 + 1 + 0;else v66=v84[110 -(27 + 80)];end elseif ((v85<=(57 -39)) or ((5513 -4336)==(141 -80))) then local v145=1272 -(711 + 561);local v146;local v147;while true do if ((v145==1) or ((984 + 1862)==(242 + 1511 + 1787))) then while true do if (((2810 + 1063)>(2375 -(194 + 227))) and (v146==(1832 -(152 + 1680)))) then v147=v84[2];v82[v147](v13(v82,v147 + 1 + 0,v67));break;end end break;end if (((2955 -1344)<=(10093 -8040)) and (v145==(0 + 0))) then v146=0 + 0;v147=nil;v145=(818 -(34 + 783)) -(0 -0);end end elseif ((4458>(2075 -(396 + 936))) and (v85==(1760 -(165 + 1576)))) then if ((v82[v84[1 + 1]]==v84[4]) or ((8792 -4876)<(453 -(49 + 47)))) then v66=v66 + 1 + 0;else v66=v84[(1051 + 127) -(898 + 277)];end else local v176=0 -0;local v177;while true do if ((v176==((0 -0) + 0)) or ((1617 + 2660)==(12715 -9242))) then v177=v84[2];do return v13(v82,v177,v177 + v84[2 + 1]);end break;end end end elseif ((2258==(1518 + 740)) and (v85<=((912 -(30 + 375)) -(161 + 316)))) then if (((10134 -5784)<=4663) and (v85<=25)) then if ((v85<=(43 -21)) or ((3704 -(433 + 28))>(8384 -(6200 -(1330 + 433))))) then if (((4034 + 344)==(10901 -6523)) and (v85==(69 -48))) then v82[v84[1 + (2 -1)]]=v29(v77[v84[1 + 2]],nil,v37);elseif (((691 + 1014)>(2690 -(54 + 1030))) and  not v82[v84[1 + 1]]) then v66=v66 + (613 -(76 + 301 + 235));else v66=v84[8 -5];end elseif ((((1818 -(433 + 207)) + 2253)<4747) and (v85<=((193 -(33 + 94)) -43))) then v82[v84[2]]={};elseif (((5996 -(561 + 793))>=(1381 + 291)) and (v85>(36 -12))) then local v178=(767 + 557) -(679 + 645);local v179;local v180;while true do if ((0==v178) or ((767 + 2947)>=((2932 + 12425) -11505))) then v179=0 + 0;v180=nil;v178=1 + 0;end if ((v178==1) or ((3901 + 165)<(155 -103))) then while true do if ((3335>(812 + 500)) and (v179==(0 + 0))) then v180=v84[2];do return v13(v82,v180,v67);end break;end end break;end end else v36[v84[12 -9]]=v82[v84[2]];end elseif ((v85<=(85 -58)) or ((2512 -1226)>(5458 -((2074 -1615) + 297)))) then if ((v85==(1141 -(763 + 352))) or (3179==(512 + 4286))) then v66=v84[6 -3];else local v150=0;local v151;local v152;local v153;local v154;while true do if (((2096 -(625 + 13))<=4255) and (v150==1)) then v153=nil;v154=nil;v150=1 + 1;end if (((3302 -(213 + 1532))<2244) and (v150==2)) then while true do if ((v151==(0 + 0)) or ((4102 -(521 + 681))<=708)) then v152=0 + 0;v153=nil;v151=430 -(18 + 411);end if (((5222 -3874)<=(3904 -(19 + (20 -13)))) and ((1 + 0)==v151)) then v154=nil;while true do if ((v152==((0 + 0) -0)) or ((572 + 21)>(12446 -8779))) then local v246=0 + 0;local v247;while true do if (((9485 -6441)==(9471 -6427)) and (v246==(768 -(530 + 238)))) then v247=0 -0;while true do if ((237<(3924 -(80 + 68))) and ((624 -(125 + 498))==v247)) then v152=1;break;end if (((2132 -(476 + 1258))<(3128 -(307 + 357))) and (v247==(0 + (0 -0)))) then local v278=0 + 0;while true do if (((1585 + 1546)>(1012 + 1008)) and (v278==(2 -(1 + 0)))) then v247=1877 -(1032 + (2334 -1490));break;end if ((v278==(0 + 0)) or (2992<(1569 + 403))) then v153=v84[7 -4];v154=v82[v153];v278=4 -3;end end end end break;end end end if ((v152==1) or (1813<=((3552 -(278 + 1650)) -(146 + 798)))) then for v260=v153 + (1 -0),v84[3 + 1] do v154=v154   .. v82[v260];end v82[v84[5 -3]]=v154;break;end end break;end end break;end if (((3272 -(977 + 343))>625) and (v150==0)) then v151=1480 -(1041 + 439);v152=nil;v150=3 -2;end end end elseif ((2963>=(201 + 634)) and (v85<=(1583 -(1318 + 237)))) then v82[v84[(174 + 629) -(92 + 709)]]=v82[v84[1 + 2]];elseif (((8501 -4488)>=194) and (v85==(92 -63))) then local v182=(0 -0) + 0;local v183;local v184;local v185;while true do if ((((1119 + 919) -(1053 + 500))<=(14173 -9344)) and (v182==0)) then v183=1077 -(143 + 934);v184=nil;v182=1 -(0 -0);end if ((v182==(2 -(3 -2))) or ((5927 -(419 + 1125))==(4904 -1525))) then v185=nil;while true do if ((v183==0) or ((3292 -1821)<=(83 + 80 + 367))) then v184=v84[2 + 0];v185={};v183=1;end if (((1 + 0)==v183) or ((5963 -2318)<(3302 -(18 + 556)))) then for v249=156 -(77 + 78), #v81 do local v250=0 -0;local v251;local v252;while true do if (((12637 -8474)>=(7571 -5415)) and (v250==(0 + 0))) then v251=0 + 0;v252=nil;v250=1;end if ((v250==(1 + 0 + 0)) or ((8619 -5632)<(3212 -799))) then while true do if ((v251==0) or ((2857 + 414)<(4117 -3279))) then v252=v81[v249];for v279=0 + 0, #v252 do local v280=0 -0;local v281;local v282;local v283;local v284;while true do if ((v280==(376 -(280 + 96))) or ((3926 + 30)==(4597 -2169))) then local v289=0 + 0;while true do if (((4060 -(543 + 406))<=(3456 -(27 + 34))) and ((2 -1)==v289)) then v280=1 + 0;break;end if (((3080 + 1074)>=(3697 -1370)) and ((0 -0)==v289)) then v281=0 -0;v282=nil;v289=452 -((614 -222) + 59);end end end if (((86 + 540)<=(3303 -(138 + 720))) and (v280==(1816 -((3294 -1581) + 101)))) then while true do if ((v281==(1 -0)) or (1919==2410)) then v284=v282[(3 + 2) -3];if (((v283==v82) and (v284>=v184)) or ((4739 -(45 + 937))<(1392 -(504 + 61)))) then local v297=(1025 -(664 + 361)) + 0;while true do if (((1418 + 114)>=816) and (v297==(1909 -((685 -350) + 1574)))) then v185[v284]=v283[v284];v282[2 -1]=v185;break;end end end break;end if ((3238>=(170 + (1095 -(765 + 322)))) and (v281==(0 -0))) then local v295=0 -0;local v296;while true do if (((3836 + 822)>=(1909 + (931 -597))) and (v295==(0 + 0))) then v296=1775 -((3547 -2370) + 598);while true do if ((v296==(1 -0)) or ((2038 + 338)==(2672 + 471))) then v281=1;break;end if (((0 -0)==v296) or ((2733 + 330)>(4941 -1292))) then local v300=0;while true do if (((3205 -(459 + (2674 -(563 + 583))))<=(135 + (10051 -5692))) and (v300==(0 -(0 -0)))) then v282=v252[v279];v283=v282[4 -3];v300=1;end if (((3156 + 1131)>(4912 -(272 + 990))) and (v300==(1 -0))) then v296=1 + 0;break;end end end end break;end end end end break;end if ((v280==(1 + 0 + 0)) or (919>((900 -(418 + 381)) + 2618))) then local v290=266 -(57 + (283 -74));while true do if ((((10537 -6742) -2254)>(109 + 79)) and (v290==0)) then v283=nil;v284=nil;v290=1829 -(1278 + 550);end if (((3129 -(757 + 202))<(907 + 1932)) and (v290==(2 -1))) then v280=2 + 0;break;end end end end end break;end end break;end end end break;end end break;end end else local v186=1147 -(538 + 609);local v187;local v188;local v189;while true do if (((3878 -2131)<((16240 -10552) -1944)) and (v186==2)) then for v221=1909 -(898 + 1010),v84[4 + 0] do local v222=0;local v223;while true do if (((823 -521)<3120) and (v222==0)) then v66=v66 + 1 + 0;v223=v75[v66];v222=2 -(1973 -(1636 + 336));end if ((v222==(2 -1)) or ((4193 -(376 + 1))>4317)) then if ((2502<=3200) and (v223[1 + 0]==(78 -50))) then v189[v221-1]={v82,v223[3]};else v189[v221-(2 -1)]={v36,v223[3 + 0]};end v81[ #v81 + (1 -0)]=v189;break;end end end v82[v84[2 + 0]]=v29(v187,v188,v37);break;end if (((3467 + 595)==4062) and (v186==((1 -0) + 0))) then v189={};v188=v10({},{__index=function(v224,v225)local v236=0 + 0;local v237;local v238;while true do if (((21362 -16749)>(199 + 1612 + (1819 -1057))) and (v236==(1 -0))) then while true do if ((4295>(267 -146)) and (v237==(0 + 0))) then v238=v189[v225];return v238[2 -1][v238[4 -2]];end end break;end if ((v236==(1964 -(1592 + 372))) or (2875<(2242 -(106 + 147)))) then v237=0;v238=nil;v236=1;end end end,__newindex=function(v226,v227,v228)local v239=1870 -((2904 -1710) + (1259 -(310 + 273)));local v240;while true do if (((0 + 0)==v239) or ((766 + 324 + 698)>(4816 -(671 + 491)))) then v240=v189[v227];v240[1 + 0][v240[3 -1]]=v228;break;end end end});v186=2;end if ((2477>=(20 + 138)) and (v186==(689 -(263 + 426)))) then local v212=0 + 0;while true do if ((v212==(421 -(16 + 405))) or ((4143 -2601)==(5060 -(556 + 93)))) then v187=v77[v84[852 -(670 + 179)]];v188=nil;v212=3 -2;end if (((4757 -(746 + 96))>(2036 -1195)) and (v212==(4 -3))) then v186=1 + 0;break;end end end end end elseif ((v85<=(714 -(507 + 172))) or ((2853 -(295 + 574))>(13020 -8035))) then if ((855<=3996) and (v85<=(17 + 15))) then if (((1040 + 884)<=4538) and (v85==(3 + 28))) then local v156=0;local v157;local v158;local v159;local v160;local v161;local v162;local v163;while true do if (((1512 -(14 + (644 -439)))>=(738 -369)) and (v156==2)) then v161=nil;v162=nil;v156=3;end if ((v156==(1974 -(1837 + 136))) or ((2476 -1420)>=((6452 -3881) -(631 + 435)))) then v159=nil;v160=nil;v156=4 -(1410 -(660 + 748));end if (((1162 + 1142)<=(6819 -(173 + 1779))) and (v156==(1108 -(854 + 251)))) then v163=nil;while true do if ((4779>(425 + 2325)) and ((1 + 0)==v157)) then v160=nil;v161=nil;v157=1816 -(707 + 1107);end if ((v157==(4 -2)) or (((3608 -1554) + 1395)<(1357 -(437 + 658)))) then local v229=0;while true do if (((0 + 0)==v229) or ((1253 + 112)==((9387 -5619) -(215 + 563)))) then v162=nil;v163=nil;v229=1 + 0 + 0;end if (((5183 -(400 + 402))>=(3198 -(121 + 345))) and (v229==1)) then v157=3 -0;break;end end end if (((1 + 2)==v157) or ((10301 -7292)>(1666 + 1823))) then while true do if ((v158==(0 -0)) or ((1994 -883)>(9593 -5886))) then local v254=1814 -(1456 + 358);while true do if ((v254==(2 -(1 -0))) or ((323 + 2486)==(2876 -(368 + 1229)))) then v158=982 -(530 + 451);break;end if (((4578 -2374)<=(4471 -((2364 -(1444 + 540)) + 252))) and ((0 -(0 + 0))==v254)) then v159=v84[4 -2];v160=v84[962 -(336 + 622)];v254=1934 -(1253 + 680);end end end if ((v158==(2 -1)) or ((850 + 476 + 69)==(121 + 2006))) then local v255=0 -0;while true do if ((v255==((3693 -2749) -(404 + 539))) or ((5875 -3155)<=(506 -309))) then v158=2;break;end if (((454 + 255)<(10238 -7865)) and (0==v255)) then v161=v159 + (934 -(183 + 749));v162={v82[v159](v82[v159 + (2 -1)],v82[v161])};v255=1 + 0;end end end if ((v158==3) or ((5132 -(966 + 287))<(9902 -6965))) then if (v163 or (2697>=(3778 + 775))) then local v267=0 + 0;local v268;while true do if ((2314<(5236 -(244 + 623))) and (v267==(0 -0))) then v268=0 + 0;while true do if (((624 + 2178)<=((23614 -16740) -2851)) and (v268==(1198 -(1186 + 12)))) then v82[v161]=v163;v66=v84[7 -(2 + 2)];break;end end break;end end else v66=v66 + ((4646 -3163) -(836 + 646));end break;end if ((v158==2) or ((496 -206)>(11472 -(9209 -(588 + 1274))))) then local v256=0;while true do if ((v256==(1747 -(408 + 1339))) or ((2133 + 580)>=(3697 -(125 + (402 -(168 + 49)))))) then for v275=1,v160 do v82[v161 + v275]=v162[v275];end v163=v162[1 + 0];v256=(2 -1) + 0;end if ((v256==((1 + 0) -0)) or ((1782 -((991 -(404 + 154)) + 118))>(4540 -((1134 -871) + 1218)))) then v158=9 -6;break;end end end end break;end if ((v157==(0 + 0)) or ((2226 -(350 + 227))>=(13423 -8932))) then local v230=0;while true do if ((v230==(1063 -(107 + 956))) or ((22684 -17763)<=4700)) then v158=0 + 0;v159=nil;v230=(124 + 496) -(93 + 526);end if ((1==v230) or (1477>=(5145 -2661))) then v157=2 -1;break;end end end end break;end if (((2195 -(863 + 883))==(389 + 60)) and (v156==((1567 -(154 + 87)) -(1150 + 176)))) then v157=1465 -((3494 -2298) + 269);v158=nil;v156=1;end end else v82[v84[1 + 1]]=v37[v84[1 + 2]];end elseif ((v85<=(27 + 6)) or ((3931 -1515)<(1114 + 906))) then local v165=0 + 0;local v166;local v167;while true do if (((746 + 898)>=((2200 -(929 + 1044)) + 630)) and ((3 -2)==v165)) then while true do if ((0==v166) or ((2087 + (3479 -2044))<(1609 + 1091))) then v167=v84[1 + 0 + 1];v82[v167]=v82[v167]();break;end end break;end if ((v165==(0 + 0)) or ((12079 -7613)<=(2546 + 1404))) then v166=0 -0;v167=nil;v165=4 -3;end end elseif ((v85>(1929 -(504 + 1391))) or ((7848 -6064)==(2139 -1424))) then if ((v82[v84[5 -3]]==v82[v84[615 -(168 + 443)]]) or ((1819 -774)>=(2932 -766))) then v66=v66 + 1 + 0;else v66=v84[(25 -18) -(3 + 1)];end else local v190=0 + 0 + 0;local v191;while true do if ((2875>(311 + 181)) and (v190==(1118 -(424 + 694)))) then v191=v84[3 -1];v82[v191]=v82[v191](v82[v191 + (4 -3)]);break;end end end elseif ((v85<=(1957 -(1763 + 156))) or ((1666 -(163 + 721))>=1151)) then if ((v85<=(138 -102)) or ((20570 -16114)<=((6404 -(248 + 110)) -3968))) then v82[v84[1 + 1]]=v84[(36 + 36) -(24 + 45)]~=(0 + 0 + 0);elseif ((v85>37) or ((310 + 387)==(2904 -1781))) then local v192=0;local v193;local v194;local v195;local v196;local v197;while true do if ((2648==(3298 -(386 + 8 + 256))) and (v192==(1 + 1))) then v197=nil;while true do if (((4625 -2561)<=2258) and (v193==(1084 -(99 + 984)))) then local v244=0;while true do if ((v244==(481 -(248 + 216 + 17))) or ((1805 + 1752 + 292)==3643)) then v196=nil;v197=nil;v244=3 -2;end if ((v244==1) or ((5036 -(92 + 699))==(3753 -(911 + 449)))) then v193=1855 -(1293 + 560);break;end end end if ((563<=(802 + 369)) and (v193==(0 -0))) then local v245=1663 -(434 + 1229);while true do if ((v245==((2 -1) -0)) or ((807 + 249)==((581 + 10272) -6712))) then v193=1 + 0;break;end if (((2367 -(1226 + 542))==(489 + 110)) and (0==v245)) then v194=0 + 0;v195=nil;v245=1 + 0;end end end if (((3685 -(313 + 1091))<=(6951 -4305)) and (v193==(4 -2))) then while true do if (((928 -315)<2376) and (v194==(1785 -(450 + 1335)))) then local v269=0 + 0;local v270;while true do if (((9110 -4484)>(9450 -6088)) and (v269==(0 -0))) then v270=0 + 0;while true do if (((1935 -1169)<=(6848 -(2766 + 453))) and (v270==(1775 -((1457 -986) + 1304)))) then local v287=0;while true do if ((((6949 + 2267) -7081)<=(301 + (3773 -1707))) and (v287==(0 + 0))) then v195=v84[9 -7];v196={v82[v195](v13(v82,v195 + 1 + 0,v84[1 + 2]))};v287=1 + 0;end if (((2373 + 2401)>(1791 -(826 + 559))) and (v287==(1 -0))) then v270=(4 -3) + 0;break;end end end if (((920 + 1443)>=(2738 -(172 + 1712))) and (v270==((747 + 239) -(804 + 181)))) then v194=1;break;end end break;end end end if (((2099 -(195 + 138 + (3015 -(1163 + 496))))<=(3007 -(1228 + 493))) and (v194==(1 + 0))) then v197=0 + 0;for v271=v195,v84[2 + 2] do local v272=0;local v273;while true do if ((((3352 + 287) -1903)==(4746 -3010)) and (v272==(793 -(401 + 392)))) then v273=0 + 0;while true do if (((2987 -1696)<2356) and (v273==(0 + 0))) then v197=v197 + 1;v82[v271]=v196[v197];break;end end break;end end end break;end end break;end end break;end if ((4008<(14894 -9895)) and (v192==(2 -1))) then v195=nil;v196=nil;v192=1046 -(1040 + 4);end if (((138 + 134)<=(3220 -2376)) and (v192==(0 + 0))) then v193=0 + 0;v194=nil;v192=1 + 0;end end else local v198=0 -0;local v199;local v200;while true do if (((5926 -1225)>(2584 -(147 + 1739))) and (((1 + 1) -(1782 -(563 + 1218)))==v198)) then while true do if ((v199==(0 + 0)) or ((3241 -(867 + 323))>2406)) then v200=v84[2];v82[v200](v13(v82,v200 + (2 -1),v84[1 + 2]));break;end end break;end if (((682 -(201 + 481))==v198) or (3403<(1389 -(775 + 581)))) then v199=(0 -0) -0;v200=nil;v198=1 + 0;end end end elseif ((v85<=(137 -98)) or ((8397 -5226)==(2020 + (10865 -8385)))) then local v169=0 + 0;local v170;while true do if ((((37167 -29581) -3963)==((18967 -14340) -1004)) and (v169==(0 -0))) then v170=v84[4 -2];v82[v170](v82[v170 + (4 -(3 -0))]);break;end end elseif ((v85>(51 -11)) or (4482==1162)) then for v204=v84[1 + 1],v84[(577 -(324 + 248)) -(2 + 0)] do v82[v204]=nil;end else v82[v84[9 -7]]=v36[v84[2 + 1]];end v66=v66 + 1;break;end end end end A,B=v27(v11(v70));if  not A[1] then local v86=0;local v87;while true do if (v86==0) then v87=v35[4][v66] or "?";error("Script error at ["   .. v87   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end end;end return v29(v28(),{},v17)();end vv9());break;end if (v0==4) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end end end
